{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\Social Media\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport './comments.scss';\nimport { AuthContext } from '../../context/authContext';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { makeRequest } from '../../axios';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { handleScroll } from '../../activate/scroll';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [menuOpen, setMenuOpen] = useState(true);\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post('/comments', newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(['comments']);\n    }\n  });\n  const {\n    isLoading,\n    data\n  } = useQuery(['comments'], () => makeRequest.get('/comments?postId=' + postId).then(res => {\n    return res.data;\n  }));\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc('');\n  };\n\n  const deleteMutation = useMutation(commentId => {\n    return makeRequest.delete('/comments/' + commentId);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(['comments']);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/profile/' + currentUser.name,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: '/upload/' + currentUser.profilePic,\n          alt: \"\",\n          onClick: handleScroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isLoading ? 'loading' : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/profile/' + comment.name,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: '/upload/' + comment.profilePic,\n          alt: \"\",\n          onClick: handleScroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), menuOpen && comment.userId === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          deleteMutation.mutate(comment.id);\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 65\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"IQ6nW+K/2dJSOLjySu0QtVFlzSk=\", false, function () {\n  return [useQueryClient, useMutation, useQuery, useMutation];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/WorkSpace/Social Media/client/src/components/comments/Comments.jsx"],"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","Link","handleScroll","MoreHorizIcon","Comments","postId","desc","setDesc","currentUser","menuOpen","setMenuOpen","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","isLoading","data","get","then","res","handleClick","e","preventDefault","mutate","deleteMutation","commentId","delete","name","profilePic","target","value","map","comment","createdAt","fromNow","userId","id"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\nimport './comments.scss';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { makeRequest } from '../../axios';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleScroll } from '../../activate/scroll';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [menuOpen, setMenuOpen] = useState(true);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      return makeRequest.post('/comments', newComment);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries(['comments']);\r\n      },\r\n    },\r\n  );\r\n\r\n  const { isLoading, data } = useQuery(['comments'], () =>\r\n    makeRequest.get('/comments?postId=' + postId).then((res) => {\r\n      return res.data;\r\n    }),\r\n  );\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc('');\r\n  };\r\n\r\n  const deleteMutation = useMutation(\r\n    (commentId) => {\r\n      return makeRequest.delete('/comments/' + commentId);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries(['comments']);\r\n      },\r\n    },\r\n  )\r\n  \r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <Link to={'/profile/' + currentUser.name}>\r\n          <img src={'/upload/' + currentUser.profilePic} alt=\"\" onClick={handleScroll} />\r\n        </Link>\r\n        <input type=\"text\" placeholder=\"write a comment\" value={desc} onChange={(e) => setDesc(e.target.value)} />\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {isLoading\r\n        ? 'loading'\r\n        : data.map((comment) => (\r\n            <div className=\"comment\" key={comment.id}>\r\n              <Link to={'/profile/' + comment.name}>\r\n                <img src={'/upload/' + comment.profilePic} alt=\"\" onClick={handleScroll} />\r\n              </Link>\r\n              <div className=\"info\">\r\n                <span>{comment.name}</span>\r\n                <p>{comment.desc}</p>\r\n              </div>\r\n              <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\r\n              \r\n              {menuOpen && comment.userId === currentUser.id && <button onClick={() => {deleteMutation.mutate(comment.id)}}>Delete</button>}\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}