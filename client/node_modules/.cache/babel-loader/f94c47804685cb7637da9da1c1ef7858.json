{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\Social Media\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport './comments.scss';\nimport { AuthContext } from '../../context/authContext';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { makeRequest } from '../../axios';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { Scroll } from '../../activate/scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    postId\n  } = _ref;\n  const [desc, setDesc] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post('/comments', newComment);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries(['comments']);\n    }\n  });\n  const {\n    isLoading,\n    data\n  } = useQuery(['comments'], () => makeRequest.get('/comments?postId=' + postId).then(res => {\n    return res.data;\n  }));\n\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc('');\n  }; //Temporary\n  // const comments = [\n  //   {\n  //     id: 1,\n  //     desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem nequeaspernatur ullam aperiam. Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem nequeaspernatur ullam aperiam',\n  //     name: 'John Doe',\n  //     userId: 1,\n  //     profilePicture:\n  //       'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n  //   },\n  //   {\n  //     id: 2,\n  //     desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem nequeaspernatur ullam aperiam',\n  //     name: 'Jane Doe',\n  //     userId: 2,\n  //     profilePicture:\n  //       'https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&w=1600',\n  //   },\n  // ];\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/profile/' + currentUser.id,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: '/upload/' + currentUser.profilePic,\n          alt: \"\",\n          onClick: Scroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"write a comment\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isLoading ? 'loading' : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/profile/' + comment.userId,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: '/upload/' + comment.profilePic,\n          alt: \"\",\n          onClick: Scroll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"x4/60YGHWLGpBn2qxgOdyKs9SoA=\", false, function () {\n  return [useQueryClient, useMutation, useQuery];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["D:/WorkSpace/Social Media/client/src/components/comments/Comments.jsx"],"names":["useContext","useState","AuthContext","useQuery","useMutation","useQueryClient","makeRequest","moment","Link","Scroll","Comments","postId","desc","setDesc","currentUser","queryClient","mutation","newComment","post","onSuccess","invalidateQueries","isLoading","data","get","then","res","handleClick","e","preventDefault","mutate","id","profilePic","target","value","map","comment","userId","name","createdAt","fromNow"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\nimport './comments.scss';\r\nimport { AuthContext } from '../../context/authContext';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { makeRequest } from '../../axios';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { Scroll } from '../../activate/scroll';\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [desc, setDesc] = useState('');\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      return makeRequest.post('/comments', newComment);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries(['comments']);\r\n      },\r\n    },\r\n  );\r\n\r\n  const { isLoading, data } = useQuery(['comments'], () =>\r\n    makeRequest.get('/comments?postId=' + postId).then((res) => {\r\n      return res.data;\r\n    }),\r\n  );\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    mutation.mutate({ desc, postId });\r\n    setDesc('');\r\n  };\r\n\r\n  //Temporary\r\n  // const comments = [\r\n  //   {\r\n  //     id: 1,\r\n  //     desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem nequeaspernatur ullam aperiam. Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem nequeaspernatur ullam aperiam',\r\n  //     name: 'John Doe',\r\n  //     userId: 1,\r\n  //     profilePicture:\r\n  //       'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem nequeaspernatur ullam aperiam',\r\n  //     name: 'Jane Doe',\r\n  //     userId: 2,\r\n  //     profilePicture:\r\n  //       'https://images.pexels.com/photos/1036623/pexels-photo-1036623.jpeg?auto=compress&cs=tinysrgb&w=1600',\r\n  //   },\r\n  // ];\r\n  return (\r\n    <div className=\"comments\">\r\n      <div className=\"write\">\r\n        <Link to={'/profile/' + currentUser.id}>\r\n          <img src={'/upload/' + currentUser.profilePic} alt=\"\" onClick={Scroll} />\r\n        </Link>\r\n        <input type=\"text\" placeholder=\"write a comment\" value={desc} onChange={(e) => setDesc(e.target.value)} />\r\n        <button onClick={handleClick}>Send</button>\r\n      </div>\r\n      {isLoading\r\n        ? 'loading'\r\n        : data.map((comment) => (\r\n            <div className=\"comment\" key={comment.id}>\r\n              <Link to={'/profile/' + comment.userId}>\r\n                <img src={'/upload/' + comment.profilePic} alt=\"\" onClick={Scroll} />\r\n              </Link>\r\n              <div className=\"info\">\r\n                <span>{comment.name}</span>\r\n                <p>{comment.desc}</p>\r\n              </div>\r\n              <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}